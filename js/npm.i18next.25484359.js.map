{"version":3,"file":"js/npm.i18next.25484359.js","mappings":"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","sources":["webpack://resume/./node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.warn(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${o.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","super","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnObjects","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","opts","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","createInstance","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance"],"sourceRoot":""}